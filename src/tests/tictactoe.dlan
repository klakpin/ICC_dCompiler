var player1Name
var player2Name

var player1Symbol := "x"
var player2Symbol := "o"

var board := []

var printBoard := func
    print "---------------------\n"
    print "- - - - - - - - - - -\n"
    print "---------------------\n"
    print "  1     2     3  \n"
    print "     :     :     \n"
    print "  ", board[1][1] ,"  :  ", board[1][2], "  :  ", board[1][3] ,"    1\n"
    print "_____:_____:_____\n"
    print "     :     :     \n"
    print "  ", board[2][1] ,"  :  ", board[2][2], "  :  ", board[2][3] ,"    2\n"
    print "_____:_____:_____\n"
    print "     |     |     \n"
    print "  ", board[3][1] ,"  :  ", board[3][2], "  :  ", board[3][3] ,"    3\n"
    print "_____:_____:_____\n\n"
end

var printWinnerName := func(x)
    print "----------------------------\n"
    print "Congrats! Winner is: ", x, "\n"
    print "----------------------------\n"
end

var giveWinner := func

    var player1Count := 0;
    var player2Count := 0;

    var nullifyVariables := func
        player1Count := 0
        player2Count := 0
    end

    // Check rows
    for i in 1..3 loop
        for y in 1..3 loop
                if board[i][y] = player1Symbol then player1Count := player1Count + 1 end
                if board[i][y] = player2Symbol then player2Count := player2Count + 1 end
        end
        if player1Count = 3 then return 1 end
        if player2Count = 3 then return 2 end
        nullifyVariables()
    end

    // Check columns
    for y in 1..3 loop
        for i in 1..3 loop
                if board[i][y] = player1Symbol then player1Count := player1Count + 1 end
                if board[i][y] = player2Symbol then player2Count := player2Count + 1 end
        end
            if player1Count = 3 then return 1 end
            if player2Count = 3 then return 2 end
            nullifyVariables()
    end

    // Check diag \
    for i in 1..3 loop
            if board[i][i] = player1Symbol then player1Count := player1Count + 1 end
            if board[i][i] = player2Symbol then player2Count := player2Count + 1 end
    end

    if player1Count = 3 then return 1 end
    if player2Count = 3 then return 2 end

    nullifyVariables()

    // Check diag /
    for i in 1..3 loop
            if board[i][4-i] = player1Symbol then player1Count := player1Count + 1 end
            if board[i][4-i] = player2Symbol then player2Count := player2Count + 1 end
    end

    if player1Count = 3 then return 1 end
    if player2Count = 3 then return 2 end

    return 0
end

for i in 1..3 loop
    board[i] := []
end

for i in 1..3 loop
    for y in 1..3 loop
        board[i][y] := " "
    end
end

print "Enter player 1 name: "
player1Name := @string;

print "\nEnter player 2 name: "
player2Name := @string;

print "\n"

var gameRunning := true
var moves := 0;
var currentPlayerMove := 1;

var moveX;
var moveY;

var winner;

while gameRunning and moves < 9 loop

    printBoard()

    if currentPlayerMove = 1 then
        print player1Name, " it's your turn!\n"
    else
        print player2Name, " it's your turn!\n"
    end

    print "Write coordinates (x and y): "

    moveY := @int
    moveX := @int

    print "\n"

    if moveY > 0 and moveY < 4 and moveX > 0 and moveX < 4 then
        if board[moveX][moveY] = " " then

            currentPlayerMove := currentPlayerMove * -1
            moves := moves + 1

            if currentPlayerMove = 1
                then board[moveX][moveY] := player1Symbol
                else board[moveX][moveY] := player2Symbol
            end

            winner := giveWinner()

            if winner /= 0 then

                printBoard()

                gameRunning := false
                if winner = 1 then printWinnerName(player2Name) end
                if winner = 2 then printWinnerName(player1Name) end
            end

            if moves = 9 then
                printBoard()
                print "Draw!"
            end

        else
            print "This cell is occupied, try again\n"
        end
    else
        print "Hey, acceptable numbers are between 1 and 3\n"
    end

end